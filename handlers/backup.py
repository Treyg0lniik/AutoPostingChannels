# handlers/backup.py
import os
from telegram import Update
from telegram.ext import CommandHandler, ContextTypes
import config

# –í–∞—à Telegram‚Äëusername –±–µ–∑ '@'
ADMIN_USERNAME = os.getenv("ADMIN_USERNAME")

async def cmd_backup(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –∏–¥—ë—Ç –æ—Ç –∞–¥–º–∏–Ω–∞
    if user.username != ADMIN_USERNAME:
        return await update.message.reply_text("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.")
    # –ë–µ—Ä—ë–º –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ñ–∞–π–ª—É —Å –¥–∞–Ω–Ω—ã–º–∏
    path = config.DATA_FILE
    if not os.path.exists(path):
        return await update.message.reply_text(f"‚ùå –§–∞–π–ª `{os.path.basename(path)}` –Ω–µ –Ω–∞–π–¥–µ–Ω.", parse_mode="MarkdownV2")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–∫—É
    await context.bot.send_document(
        chat_id=user.id,
        document=open(path, "rb"),
        filename=os.path.basename(path),
        caption=f"üì¶ –ë–µ–∫–∞–ø `{os.path.basename(path)}`",
        parse_mode="MarkdownV2"
    )

def register_backup(app):
    app.add_handler(CommandHandler("backup", cmd_backup))
